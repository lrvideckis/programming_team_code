name: programming team code CI

on: push

jobs:
  library_checker_aizu_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Set up Python
      uses: actions/setup-python@v1
    - name: Install dependencies
      run: pip3 install -U online-judge-verify-helper
    - name: Set up Rust (1.42.0)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: 1.42.0-x86_64-unknown-linux-gnu
        default: true
        profile: minimal
    # required by cargo-udeps
    - name: Set up Rust (nightly)
      uses: actions-rs/toolchain@v1
      with:
        toolchain: nightly-x86_64-unknown-linux-gnu
        default: true
        profile: minimal
    - name: Set up git submodules
      run: |
        git submodule init
        git submodule update
        rm -rf hackpack-cpp/tests/
    - name: Run tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        YUKICODER_TOKEN: ${{ secrets.YUKICODER_TOKEN }}
        GH_PAT: ${{ secrets.GH_PAT }}
      run: oj-verify all

  astyle_cppcheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install astyle cppcheck
    - name: Astyle, cppcheck
      run: make --directory=tests/ astyle_cppcheck

  clangtidy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install clang
    - name: clang-tidy
      run: make --directory=tests/ clangtidy

  compile_all_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Compile all tests
      run: make --directory=tests/ compile_all_tests

  doxygen:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install doxygen
      run: sudo apt install doxygen
    - name: Check correctness, completeness of doxygen comments
      run: make --directory=tests/ doxygen

  build_hackpack:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install texlive, rename
      run: |
        sudo apt update
        sudo apt install texlive texlive-latex-extra rename
    - name: Install node
      uses: actions/setup-node@v1
      with:
        node-version: "12.16.0"
    - name: Install Notebook Generator
      run: |
        sudo npm install -g npm@latest
        sudo npm install -g notebook-generator
    - name: build hackpack
      run: make --directory=tests/ hackpack
    - uses: actions/upload-artifact@v3
      with:
        name: hackpack
        path: tests/hackpack.pdf

  publish_hackpack:
    runs-on: ubuntu-latest
    needs: [library_checker_aizu_tests, astyle_cppcheck, clangtidy, compile_all_tests, doxygen, build_hackpack]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v3
      with:
        name: hackpack
        path: tests/hackpack.pdf
    - uses: marvinpinto/action-automatic-releases@latest
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        automatic_release_tag: hackpack
        prerelease: false
        title: hackpack
        files: tests/hackpack.pdf

  update_no_comments_branch:
    runs-on: ubuntu-latest
    needs: [library_checker_aizu_tests, astyle_cppcheck, clangtidy, compile_all_tests]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Remove comments and force push to no_comments branch
      run: |
        git config --local user.name github-actions
        git config --local user.email 33103480+lrvideckis@users.noreply.github.com
        git checkout -b no_comments
        make --directory=tests/ remove_all_comments
        git add library/
        git commit --message "remove comments"
        git push origin no_comments --force

  update_online_contest_branch:
    runs-on: ubuntu-latest
    needs: [library_checker_aizu_tests, astyle_cppcheck, clangtidy, compile_all_tests]
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v2
    - name: Combine includes and force push to online_contest branch
      run: |
        git config --local user.name github-actions
        git config --local user.email 33103480+lrvideckis@users.noreply.github.com
        git checkout -b online_contest
        make --directory=tests/ combine_includes
        git add library/
        git commit --message "combine includes"
        git push origin combine_includes --force

  format_and_check_bash_scripts:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Install dependencies
      run: sudo apt install shfmt shellcheck
    - name: format and check scripts
      run: make --directory=tests/ format_and_check_bash_scripts
